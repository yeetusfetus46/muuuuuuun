{"sourceCode":"const Proxy = require('@abai/proxy');\nconst express = require('express');\nconst app = express();\nlet config;\ntry {\n config = require('./config.json')\n} catch (e) {\n config = { prefix: 'get', mainPagePath: '/index.html', notFoundPagePath: '/404.html', ratelimit: {\n windowMs: 1000,\n max: 50,\n message: 'Global ratelimit reached.'\n }};\n}\n\napp.enable('trust proxy', true);\napp.set('view cache', true);\n\napp.use(require('cors')());\napp.use(require('helmet')({\n frameguard: false\n}));\napp.use(require('compression')());\napp.use(require('express-rate-limit')(config.ratelimit));\n\nconst add = (html) => {\n const script = [\n `\n\n \n Powered By Muun\n \n `\n ].join('\\n');\n html = html.replace('', `\\n\n ${script}\n \\n`);\n return html;\n}\n\nconst middleware = (data) => {\n if (data.contentType == 'text/html') {\n data.stream = data.stream.pipe(new require('stream').Transform({\n decodeStrings: false,\n transform: function(chunk, encoding, next) {\n this.push(add(chunk.toString()));\n next();\n }\n }));\n }\n}\n\nfunction generateToken(n = Math.floor(Math.random() * (200 - 100 + 1) + 100)) {\n var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n var token = '';\n for(var i = 0; i < n; i++) {\n token += chars[Math.floor(Math.random() * chars.length)];\n }\n return token;\n}\n\nconst token = [ generateToken(), generateToken(), generateToken(), generateToken(), generateToken() ];\napp.use(new Proxy({ prefix: `/${token[0]}/`, responseMiddleware: [ middleware ]}));\napp.use(new Proxy({ prefix: `/${token[1]}/`, responseMiddleware: [ middleware ]}));\napp.use(new Proxy({ prefix: `/${token[2]}/`, responseMiddleware: [ middleware ]}));\napp.use(new Proxy({ prefix: `/${token[3]}/`, responseMiddleware: [ middleware ]}));\napp.use(new Proxy({ prefix: `/${token[4]}/`, responseMiddleware: [ middleware ]}));\n\napp.get(`/${config.prefix}`, (req, res) => {\n res.redirect(307, `${req.protocol + '://' + req.get('host') + '/'}${token[Math.floor(Math.random()*token.length)]}/${req.query.url}#${token[Math.floor(Math.random()*token.length)]}`);\n});\n\napp.get('/', (req, res) => {\n res.status(200).sendFile(__dirname + config.mainPagePath);\n});\n\napp.use((req, res) => {\n res.status(404).sendFile(__dirname + config.notFoundPagePath);\n});\n\napp.listen(process.env.PORT, () => {\n console.log(`Launched on port ${process.env.PORT}`);\n});","sourceMap":""}
